@using DiscImageChef.CommonTypes.Metadata
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "DiscImageChef Device Report";
}
@{
    // /***************************************************************************
    // Aaru Data Preservation Suite
    // ----------------------------------------------------------------------------
    //
    // Filename       : View.cshtml
    // Author(s)      : Natalia Portillo <claunia@claunia.com>
    //
    // Component      : DiscImageChef Server.
    //
    // --[ Description ] ----------------------------------------------------------
    //
    //     Renders device report.
    //
    // --[ License ] --------------------------------------------------------------
    //
    //     This library is free software; you can redistribute it and/or modify
    //     it under the terms of the GNU Lesser General Public License as
    //     published by the Free Software Foundation; either version 2.1 of the
    //     License, or (at your option) any later version.
    //
    //     This library is distributed in the hope that it will be useful, but
    //     WITHOUT ANY WARRANTY; without even the implied warranty of
    //     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
    //     Lesser General Public License for more details.
    //
    //     You should have received a copy of the GNU Lesser General Public
    //     License along with this library; if not, see <http://www.gnu.org/licenses/>.
    //
    // ----------------------------------------------------------------------------
    // Copyright Â© 2011-2020 Natalia Portillo
    // ****************************************************************************/
}
<div class="container-fluid">
DiscImageChef Report for
@ViewBag.lblManufacturer
@ViewBag.lblModel
@ViewBag.lblRevision

@if (ViewBag.UsbItem != null)
{
    <div id="divUsb">
        <br />
        <b>USB characteristics:</b>
        <br />
        <i>Manufacturer:</i> @ViewBag.UsbItem.Manufacturer<br />
        <i>Product:</i> @ViewBag.UsbItem.Product<br />
        <i>Vendor ID:</i> @ViewBag.UsbItem.VendorDescription<br />
        <i>Product ID:</i> @ViewBag.UsbItem.ProductDescription
    </div>
}

@if (ViewBag.FireWireItem != null)
{
    <div id="divFireWire">
        <br />
        <b>FireWire characteristics:</b>
        <br />
        <i>Manufacturer:</i> @ViewBag.FireWire.Manufacturer<br />
        <i>Product:</i> @ViewBag.FireWire.Product<br />
        <i>Vendor ID:</i> @ViewBag.FireWire.VendorDescription<br />
        <i>Product ID:</i> @ViewBag.FireWire.ProductDescription
    </div>
}

@if (ViewBag.PcmciaItem != null)
{
    <div id="divPcmcia">
        <br />
        <b>PCMCIA characteristics:</b>
        <br />
        <i>Manufacturer:</i> @ViewBag.PcmciaItem.Manufacturer<br />
        <i>Product:</i> @ViewBag.PcmciaItem.ProductName<br />
        <i>Manufacturer code:</i> @ViewBag.PcmciaItem.VendorDescription<br />
        <i>Card code:</i> @ViewBag.PcmciaItem.CardCode<br />
        <i>Compliance:</i> @ViewBag.PcmciaItem.Compliance<br />
        @if (ViewBag.repPcmciaTuples != null)
        {
            foreach (KeyValuePair<string, string> kvp in ViewBag.repPcmciaTuples)
            {
                <text>
                    <i>@kvp.Key</i>: @kvp.Value<br /></text>
            }
        }
    </div>
}

@if (ViewBag.AtaItem != null)
{
    <div id="divAta">
        <br />
        <b>
            @ViewBag.AtaItem characteristics:
        </b>
        <br />
        @ViewBag.lblAtaDeviceType<br />
        @foreach (KeyValuePair<string, string> kvp in ViewBag.repAtaTwo)
        {
            <text>
                <i>@kvp.Key</i>: @kvp.Value<br /></text>
        }
        <br />
        @foreach (string item in ViewBag.repAtaOne)
        {
            @Html.Raw(item)<br />
        }
    </div>
}
@if (ViewBag.repScsi != null)
{
    <div id="divScsi">
        <br />
        <b>SCSI characteristics:</b>
        <br />
        <i>Vendor: </i>@ViewBag.lblScsiVendor<br />
        <i>Product: </i>@ViewBag.lblScsiProduct<br />
        <i>Revision: </i>@ViewBag.lblScsiRevision<br />
        @foreach (string item in ViewBag.repScsi)
        {
            @Html.Raw(item)<br />
        }
        @if (ViewBag.repModeSense != null)
        {
            <div id="divScsiModeSense">
                <br />
                <i>SCSI mode sense pages:</i>
                <table border="1">
                    <tr>
                        <th>Mode</th>
                        <th>Contents</th>
                    </tr>
                    @foreach (KeyValuePair<string, string> kvp in ViewBag.repModeSense)
                    {
                        <tr>
                            <td>
                                @kvp.Key
                            </td>
                            <td>
                                @Html.Raw(kvp.Value)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        }
        @if (ViewBag.repEvpd != null)
        {
            <div id="divScsiEvpd">
                <br />
                <i>SCSI extended vital product data pages:</i>
                <table border="1">
                    <tr>
                        <th>EVPD</th>
                        <th>Contents</th>
                    </tr>
                    @foreach (KeyValuePair<string, string> kvp in ViewBag.repEvpd)
                    {
                        <tr>
                            <td>
                                @kvp.Key
                            </td>
                            <td>
                                @Html.Raw(kvp.Value)
                            </td>
                        </tr>
                    }
                </table>
            </div>
        }
        @if (ViewBag.repScsiMmcMode != null)
        {
            <div id="divScsiMmcMode">
                <br />
                <b>SCSI CD-ROM capabilities:</b>
                <br />
                @foreach (string item in ViewBag.repScsiMmcMode)
                {
                    @Html.Raw(item)<br />
                }
            </div>
        }
        @if (ViewBag.repScsiMmcFeatures != null)
        {
            <div id="divScsiMmcFeatures">
                <br />
                <b>SCSI MMC features:</b>
                <br />
                @foreach (string item in ViewBag.repScsiMmcFeatures)
                {
                    @Html.Raw(item)<br />
                }
            </div>
        }
        @if (ViewBag.divScsiSscVisible == true)
        {
            <div id="divScsiSsc">
                <br />
                <b>SCSI Streaming device capabilities:</b>
                <br />
                Block size granularity: @ViewBag.lblScsiSscGranularity<br />
                Maximum block length: @ViewBag.lblScsiSscMaxBlock bytes
                <br />
                Minimum block length: @ViewBag.lblScsiSscMinBlock bytes
                <br />
                @if (ViewBag.repScsiSscDensities != null)
                {
                    foreach (SupportedDensity density in ViewBag.repScsiSscDensities)
                    {
                        <text>
                            <br />
                            <b>
                                Information for supported density with primary code @($"{density.PrimaryCode:X2}h") and secondary code @($"{density.SecondaryCode:X2}h")
                            </b>
                            <br />
                            Drive can write this density: @density.Writable<br />
                            Duplicate density: @density.Duplicate<br />
                            Default density: @density.DefaultDensity<br />
                            Density has @density.BitsPerMm bits per mm, with @density.Tracks tracks in a @density.Width mm width tape
                            Name: @density.Name<br />
                            Organization: @density.Organization<br />
                            Description: @density.Description<br />
                            Maximum capacity: @density.Capacity megabytes
                            <br />
                        </text>
                    }
                }
                @if (ViewBag.repScsiSscMedias != null)
                {
                    foreach (SscSupportedMedia media in ViewBag.repScsiSscMedias)
                    {
                        <text>
                            <br />
                            <b>
                                Information for supported media with type code @($"{media.MediumType:X2}h")
                            </b>
                            <br />
                            Media is @media.Length m long in a @media.Width mm width tape
                            Name: @media.Name<br />
                            Organization: @media.Organization<br />
                            Description: @media.Description<br />
                        </text>
                    }
                }
            </div>
        }
    </div>
}
@if (ViewBag.repTestedMedia != null)
{
    <div id="divTestedMedia">
        <br />
        <b>Tested media:</b>
        <br />
        @foreach (string item in ViewBag.repTestedMedia)
        {
            @Html.Raw(item)<br />
        }
    </div>
}
@if (ViewBag.repMMC != null)
{
    <div id="divMMC">
        <br />
        <b>MultiMediaCard device:</b>
        <br />
        @foreach (string item in ViewBag.repMMC)
        {
            @Html.Raw(item)<br />
        }
    </div>
}
@if (ViewBag.repSD != null)
{
    <div id="divSD">
        <br />
        <b>SecureDigital device:</b>
        <br />
        @foreach (string item in ViewBag.repSD)
        {
            @Html.Raw(item)<br />
        }
    </div>
}
</div>